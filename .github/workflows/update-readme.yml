name: Update README with TOC

on:
  push:
    branches: [main]
    paths:
      - "**/*.pptx"
  pull_request:
    branches: [main]
    paths:
      - "**/*.pptx"

jobs:
  update-readme:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install python-pptx

      - name: Generate TOC and Presentations Content
        run: |
          set -euo pipefail

          # –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞
          function create_progress_bar() {
            local current=$1
            local total=$2
            local width=20
            local filled=$((current * width / total))
            local empty=$((width - filled))
            local percentage=$((current * 100 / total))
            local bar=""
            for ((i=0; i<filled; i++)); do bar+="‚ñà"; done
            for ((i=0; i<empty; i++)); do bar+="‚ñë"; done
            echo "\`\`\`diff"
            echo "+ $bar ($current/$total) - $percentage%"
            echo "\`\`\`"
          }

          # –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Å—ã–ª–æ–∫ –Ω–∞ —Ñ–∞–π–ª—ã
          function create_link() {
            local path=$1
            local title=$(basename "$path" | sed 's/\.pptx$//' | sed 's/-/ /g')
            local depth=$2
            local indent=$(printf '%*s' "$depth" '')
            
            # –ü–æ–ª—É—á–∞–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∏–∑ –≤—ã–≤–æ–¥–∞ Python —Å–∫—Ä–∏–ø—Ç–∞
            IFS='|' read -r _ slides date <<< "$(python3 .github/scripts/process_presentations.py "$(dirname "$path")" | grep "^$title|")"
            
            local emoji="üìä"
            local type="–õ–µ–∫—Ü–∏—è"
            [[ "$title" =~ [–ü–ø]—Ä–∞–∫—Ç–∏–∫ ]] && { emoji="üíª"; type="–ü—Ä–∞–∫—Ç–∏–∫–∞"; }
            [[ "$title" =~ [–î–¥]–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω ]] && { emoji="üìö"; type="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ"; }
            
            local toc_dir=$(dirname "$path")
            [[ "$toc_dir" == "." ]] && toc_dir="."
            
            echo "${indent}- [ ] ${emoji} [${title}](${path})"
            echo "${indent}  - –¢–∏–ø: ${type}"
            echo "${indent}  - –°–ª–∞–π–¥–æ–≤: ${slides}"
            echo "${indent}  - –û–±–Ω–æ–≤–ª–µ–Ω–æ: ${date}"
            echo "${indent}  - [–û–≥–ª–∞–≤–ª–µ–Ω–∏–µ](${toc_dir}/presentations.md#$(basename "$path" | sed 's/\.pptx$//' | sed 's/[^a-zA-Z0-9]/-/g'))"
          }

          # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –º–æ–¥—É–ª–µ–º
          function is_module() {
            local dir=$1
            [[ "$(basename "$dir")" =~ ^[0-9]+-.*$ ]] || [[ "$(basename "$dir")" =~ ^–ú–æ–¥—É–ª—å\ [0-9]+.*$ ]]
          }

          # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–º–µ—Ä–∞ –º–æ–¥—É–ª—è
          function get_module_number() {
            local dir=$1
            local name=$(basename "$dir")
            [[ "$name" =~ ^[0-9]+-.*$ ]] && echo "$name" | sed -E 's/^([0-9]+)-.*/\1/' && return
            [[ "$name" =~ ^–ú–æ–¥—É–ª—å\ [0-9]+.*$ ]] && echo "$name" | sed -E 's/^–ú–æ–¥—É–ª—å\ ([0-9]+).*/\1/' && return
            echo "999"
          }

          # –†–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π –æ–±—Ö–æ–¥ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
          function scan_directory() {
            local dir=$1
            local depth=$2
            local is_module_dir=$3
            local module_total=0
            local module_current=0
            
            if [ "$is_module_dir" = "true" ]; then
              module_total=$(find "$dir" -name "*.pptx" | wc -l)
            fi
            
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏ –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
            if [ -n "$(find "$dir" -maxdepth 1 -name "*.pptx")" ]; then
              # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É
              python3 .github/scripts/process_presentations.py "$dir"
              
              # –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ñ–∞–π–ª—ã
              find "$dir" -maxdepth 1 -name "*.pptx" | sort | while IFS= read -r file; do
                create_link "$file" "$depth" >> temp_toc.md
                [ "$is_module_dir" = "true" ] && ((module_current++))
              done
            fi
            
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ–¥–¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
            find "$dir" -maxdepth 1 -type d | sort | while IFS= read -r subdir; do
              [ "$subdir" = "$dir" ] && continue
              base=$(basename "$subdir")
              [[ "$base" == ".git" || "$base" == ".github" ]] && continue
              
              if [ "$is_module_dir" = "true" ]; then
                if find "$subdir" -name "*.pptx" | grep -q .; then
                  echo "" >> temp_toc.md
                  echo "### $base" >> temp_toc.md
                  echo "" >> temp_toc.md
                  scan_directory "$subdir" "$((depth + 2))" "false"
                fi
              else
                if is_module "$subdir"; then
                  echo "" >> temp_toc.md
                  echo "## $base" >> temp_toc.md
                  echo "" >> temp_toc.md
                  scan_directory "$subdir" "$((depth + 2))" "true"
                fi
              fi
            done
            
            if [ "$is_module_dir" = "true" ] && [ "$module_total" -gt 0 ]; then
              echo "" >> temp_toc.md
              echo "#### –ü—Ä–æ–≥—Ä–µ—Å—Å –º–æ–¥—É–ª—è" >> temp_toc.md
              create_progress_bar $module_current $module_total >> temp_toc.md
              echo "" >> temp_toc.md
            fi
          }

          # –ù–∞—á–∏–Ω–∞–µ–º —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
          scan_directory "." 0 "false"

      - name: Update README
        run: |
          cp README.md README.md.bak

          cat temp_toc.md > README.md
          echo "" >> README.md
          echo "---" >> README.md
          echo "" >> README.md
          cat README.md.bak >> README.md

          rm temp_toc.md README.md.bak

      - name: Commit and push if changed
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md
          git add **/presentations.md
          git diff --quiet && git diff --staged --quiet || (git commit -m "Update README and presentations content" && git push)
